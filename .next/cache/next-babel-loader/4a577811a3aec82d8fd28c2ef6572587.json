{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bc/Develop/next-store/components/Image.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\"; // This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nvar CD_API = process.env.CD_API || \"https://res.cloudinary.com/vercel/image/upload/v1592403664/\";\nexport default _s(function (_ref) {\n  _s();\n\n  var width = _ref.width,\n      height = _ref.height,\n      publicId = _ref.publicId,\n      rest = _objectWithoutProperties(_ref, [\"width\", \"height\", \"publicId\"]);\n\n  var initialProps = _objectSpread({\n    width: width,\n    height: height,\n    publicId: publicId\n  }, rest);\n\n  var supportsLazyLoading = useNativeLazyLoading();\n\n  var _useInView = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\"\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  return __jsx(\"div\", {\n    ref: !supportsLazyLoading ? ref : undefined,\n    className: \"relative block overflow-hidden ease-in\",\n    style: {\n      position: \"relative\",\n      paddingBottom: \"\".concat(height > 0 && width > 0 ? height / width * 100 : 100, \"%\"),\n      background: \"#edf2f7\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, inView || supportsLazyLoading ? // <Image loading=\"lazy\" {...initialProps} />\n  __jsx(\"img\", _extends({}, rest, {\n    src: \"https://res.cloudinary.com/vercel/image/upload/\".concat(height ? \"h_\".concat(height, \",\") : \"\").concat(width ? \"w_\".concat(width) : \"\", \"/v1592403664/\").concat(publicId),\n    width: width,\n    height: height,\n    loading: \"lazy\",\n    style: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })) : null);\n}, \"oWAOmAjvQnjH6WChOVuPSTZEUxQ=\", false, function () {\n  return [useNativeLazyLoading, useInView];\n});","map":{"version":3,"sources":["/Users/bc/Develop/next-store/components/Image.js"],"names":["Image","React","useState","useNativeLazyLoading","useInView","CD_API","process","env","width","height","publicId","rest","initialProps","supportsLazyLoading","triggerOnce","rootMargin","ref","inView","undefined","position","paddingBottom","background"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,SAASC,SAAT,QAA0B,6BAA1B,C,CAEA;AACA;;AAEA,IAAMC,MAAM,GACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ,IACA,6DAFF;AAIA,kBAAe,gBAA0C;AAAA;;AAAA,MAAvCG,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AACvD,MAAIC,YAAY;AAAKJ,IAAAA,KAAK,EAALA,KAAL;AAAYC,IAAAA,MAAM,EAANA,MAAZ;AAAoBC,IAAAA,QAAQ,EAARA;AAApB,KAAiCC,IAAjC,CAAhB;;AAEA,MAAME,mBAAmB,GAAGV,oBAAoB,EAAhD;;AAHuD,mBAIjCC,SAAS,CAAC;AAC9BU,IAAAA,WAAW,EAAE,IADiB;AAE9BC,IAAAA,UAAU,EAAE;AAFkB,GAAD,CAJwB;AAAA;AAAA,MAIhDC,GAJgD;AAAA,MAI3CC,MAJ2C;;AASvD,SACE;AACE,IAAA,GAAG,EAAE,CAACJ,mBAAD,GAAuBG,GAAvB,GAA6BE,SADpC;AAEE,IAAA,SAAS,EAAC,wCAFZ;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,aAAa,YACXX,MAAM,GAAG,CAAT,IAAcD,KAAK,GAAG,CAAtB,GAA2BC,MAAM,GAAGD,KAAV,GAAmB,GAA7C,GAAmD,GADxC,MAFR;AAKLa,MAAAA,UAAU,EAAE;AALP,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGJ,MAAM,IAAIJ,mBAAV,GACC;AACA,4BACMF,IADN;AAEE,IAAA,GAAG,2DACDF,MAAM,eAAQA,MAAR,SAAoB,EADzB,SAEAD,KAAK,eAAQA,KAAR,IAAkB,EAFvB,0BAEyCE,QAFzC,CAFL;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,MAAM,EAAEC,MANV;AAOE,IAAA,OAAO,EAAC,MAPV;AAQE,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,UAAZ;AAAwBX,MAAAA,KAAK,EAAE,MAA/B;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFD,GAYG,IAvBN,CADF;AA2BD,CApCD;AAAA,UAG8BN,oBAH9B,EAIwBC,SAJxB;AAAA","sourcesContent":["import { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\";\n\n// This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nconst CD_API =\n  process.env.CD_API ||\n  \"https://res.cloudinary.com/vercel/image/upload/v1592403664/\";\n\nexport default ({ width, height, publicId, ...rest }) => {\n  let initialProps = { width, height, publicId, ...rest };\n\n  const supportsLazyLoading = useNativeLazyLoading();\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\",\n  });\n\n  return (\n    <div\n      ref={!supportsLazyLoading ? ref : undefined}\n      className=\"relative block overflow-hidden ease-in\"\n      style={{\n        position: \"relative\",\n        paddingBottom: `${\n          height > 0 && width > 0 ? (height / width) * 100 : 100\n        }%`,\n        background: \"#edf2f7\",\n      }}\n    >\n      {inView || supportsLazyLoading ? (\n        // <Image loading=\"lazy\" {...initialProps} />\n        <img\n          {...rest}\n          src={`https://res.cloudinary.com/vercel/image/upload/${\n            height ? `h_${height},` : \"\"\n          }${width ? `w_${width}` : \"\"}/v1592403664/${publicId}`}\n          width={width}\n          height={height}\n          loading=\"lazy\"\n          style={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}\n        />\n      ) : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}