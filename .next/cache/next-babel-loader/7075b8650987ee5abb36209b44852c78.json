{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\"; // This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nvar CD_API = process.env.CD_API || \"https://res.cloudinary.com/vercel/image/upload/v1592403664/\";\nexport default (function (_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      publicId = _ref.publicId,\n      rest = _objectWithoutProperties(_ref, [\"width\", \"height\", \"publicId\"]);\n\n  var initialProps = _objectSpread({\n    width: width,\n    height: height,\n    publicId: publicId\n  }, rest);\n\n  var supportsLazyLoading = useNativeLazyLoading();\n\n  var _useInView = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\"\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  return __jsx(\"div\", {\n    ref: !supportsLazyLoading ? ref : undefined,\n    className: \"relative block overflow-hidden ease-in\",\n    style: {\n      position: \"relative\",\n      paddingBottom: \"\".concat(height > 0 && width > 0 ? height / width * 100 : 100, \"%\"),\n      background: \"#edf2f7\"\n    }\n  }, inView || supportsLazyLoading ? // <Image loading=\"lazy\" {...initialProps} />\n  __jsx(\"img\", _extends({}, rest, {\n    src: \"https://res.cloudinary.com/vercel/image/upload/\".concat(height ? \"h_\".concat(height, \",\") : \"\").concat(width ? \"w_\".concat(width, \",\") : \"\", \"/v1592403664/\").concat(publicId),\n    width: width,\n    height: height,\n    loading: \"lazy\",\n    style: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\"\n    }\n  })) : null);\n});","map":null,"metadata":{},"sourceType":"module"}