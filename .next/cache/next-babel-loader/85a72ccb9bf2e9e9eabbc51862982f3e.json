{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bc/Develop/next-ecomm/components/Image.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\"; // This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default _s(function (_ref) {\n  _s();\n\n  var rest = _extends({}, _ref);\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var initialProps = _objectSpread({}, rest);\n\n  var supportsLazyLoading = useNativeLazyLoading();\n\n  var _useInView = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\"\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  return __jsx(InView, {\n    as: \"div\",\n    onChange: function onChange(inView, entry) {\n      return console.log(\"Inview:\", inView);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"relative block overflow-hidden transition-all ease-in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Image, _extends({}, initialProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }))));\n}, \"M3iCjjA9Zoz+JnnJUyK2OpCpD/o=\", false, function () {\n  return [useNativeLazyLoading, useInView];\n});","map":{"version":3,"sources":["/Users/bc/Develop/next-ecomm/components/Image.js"],"names":["Image","React","useState","useNativeLazyLoading","useInView","rest","isLoading","setIsLoading","initialProps","supportsLazyLoading","triggerOnce","rootMargin","ref","inView","entry","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,SAASC,SAAT,QAA0B,6BAA1B,C,CAEA;AACA;;AAEA,kBAAe,gBAAiB;AAAA;;AAAA,MAAXC,IAAW;;AAAA,kBACIH,QAAQ,CAAC,IAAD,CADZ;AAAA,MACvBI,SADuB;AAAA,MACZC,YADY;;AAE9B,MAAIC,YAAY,qBAAQH,IAAR,CAAhB;;AAEA,MAAMI,mBAAmB,GAAGN,oBAAoB,EAAhD;;AAJ8B,mBAKRC,SAAS,CAAC;AAC9BM,IAAAA,WAAW,EAAE,IADiB;AAE9BC,IAAAA,UAAU,EAAE;AAFkB,GAAD,CALD;AAAA;AAAA,MAKvBC,GALuB;AAAA,MAKlBC,MALkB;;AAU9B,SACE,MAAC,MAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,QAAQ,EAAE,kBAACA,MAAD,EAASC,KAAT;AAAA,aAAmBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB,CAAnB;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,eAAWL,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,CADF;AAUD,CApBD;AAAA,UAI8BL,oBAJ9B,EAKwBC,SALxB;AAAA","sourcesContent":["import { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\";\n\n// This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default ({ ...rest }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  let initialProps = { ...rest };\n\n  const supportsLazyLoading = useNativeLazyLoading();\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\",\n  });\n\n  return (\n    <InView\n      as=\"div\"\n      onChange={(inView, entry) => console.log(\"Inview:\", inView)}\n    >\n      <div className=\"relative block overflow-hidden transition-all ease-in\">\n        <Image {...initialProps} />\n      </div>\n    </InView>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}