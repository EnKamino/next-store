{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bc/Develop/next-ecomm/components/Image.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from \"cloudinary-react\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { InView } from \"react-intersection-observer\"; // This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default _s(function (_ref) {\n  _s();\n\n  var rest = _extends({}, _ref);\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var imageRef = useRef(null);\n\n  var initialProps = _objectSpread(_objectSpread({}, rest), {}, {\n    quality: \"10\"\n  });\n\n  useEffect(function () {\n    setTimeout(function () {\n      initialProps.quality = 100;\n      setIsLoading(false);\n    }, 1000);\n  }, [imageRef]);\n  return __jsx(InView, {\n    as: \"div\",\n    onChange: function onChange(inView, entry) {\n      return console.log(\"Inview:\", inView);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"relative block overflow-hidden transition-all ease-in\",\n    style: isLoading ? {\n      filter: \"blur(10px)\"\n    } : {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Image, _extends({\n    ref: imageRef\n  }, initialProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }))));\n}, \"SoCfgU7AusIdp0FAMF5rjwMjnzU=\");","map":{"version":3,"sources":["/Users/bc/Develop/next-ecomm/components/Image.js"],"names":["Image","React","useRef","useEffect","useState","InView","rest","isLoading","setIsLoading","imageRef","initialProps","quality","setTimeout","inView","entry","console","log","filter"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,6BAAvB,C,CAEA;AACA;;AAEA,kBAAe,gBAAiB;AAAA;;AAAA,MAAXC,IAAW;;AAAA,kBACIF,QAAQ,CAAC,IAAD,CADZ;AAAA,MACvBG,SADuB;AAAA,MACZC,YADY;;AAE9B,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;;AACA,MAAIQ,YAAY,mCAAQJ,IAAR;AAAcK,IAAAA,OAAO,EAAE;AAAvB,IAAhB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,YAAY,CAACC,OAAb,GAAuB,GAAvB;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GALQ,EAKN,CAACC,QAAD,CALM,CAAT;AAOA,SACE,MAAC,MAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,QAAQ,EAAE,kBAACI,MAAD,EAASC,KAAT;AAAA,aAAmBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB,CAAnB;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAC,uDADZ;AAEE,IAAA,KAAK,EAAEN,SAAS,GAAG;AAAEU,MAAAA,MAAM,EAAE;AAAV,KAAH,GAA8B,EAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAER;AAAZ,KAA0BC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CAJF,CADF;AAaD,CAzBD","sourcesContent":["import { Image } from \"cloudinary-react\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { InView } from \"react-intersection-observer\";\n\n// This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default ({ ...rest }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const imageRef = useRef(null);\n  let initialProps = { ...rest, quality: \"10\" };\n\n  useEffect(() => {\n    setTimeout(() => {\n      initialProps.quality = 100;\n      setIsLoading(false);\n    }, 1000);\n  }, [imageRef]);\n\n  return (\n    <InView\n      as=\"div\"\n      onChange={(inView, entry) => console.log(\"Inview:\", inView)}\n    >\n      <div\n        className=\"relative block overflow-hidden transition-all ease-in\"\n        style={isLoading ? { filter: \"blur(10px)\" } : {}}\n      >\n        <Image ref={imageRef} {...initialProps} />\n      </div>\n    </InView>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}