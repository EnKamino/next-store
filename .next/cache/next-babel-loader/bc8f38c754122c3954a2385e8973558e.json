{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bc/Develop/next-ecomm/components/Image.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\"; // This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default _s(function (_ref) {\n  _s();\n\n  var width = _ref.width,\n      height = _ref.height,\n      rest = _objectWithoutProperties(_ref, [\"width\", \"height\"]);\n\n  var initialProps = _objectSpread({\n    width: width,\n    height: height\n  }, rest);\n\n  var supportsLazyLoading = useNativeLazyLoading();\n\n  var _useInView = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\"\n  }),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  return __jsx(\"div\", {\n    ref: !supportsLazyLoading ? ref : undefined,\n    className: \"relative block overflow-hidden ease-in\",\n    style: {\n      position: \"relative\",\n      paddingBottom: \"\".concat(height / width * 100, \"%\"),\n      background: \"#2a4b7a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, inView || supportsLazyLoading ? __jsx(Image, _extends({}, initialProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  })) : null);\n}, \"oWAOmAjvQnjH6WChOVuPSTZEUxQ=\", false, function () {\n  return [useNativeLazyLoading, useInView];\n});","map":{"version":3,"sources":["/Users/bc/Develop/next-ecomm/components/Image.js"],"names":["Image","React","useState","useNativeLazyLoading","useInView","width","height","rest","initialProps","supportsLazyLoading","triggerOnce","rootMargin","ref","inView","undefined","position","paddingBottom","background"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,SAASC,SAAT,QAA0B,6BAA1B,C,CAEA;AACA;;AAEA,kBAAe,gBAAgC;AAAA;;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAXC,IAAW;;AAC7C,MAAIC,YAAY;AAAKH,IAAAA,KAAK,EAALA,KAAL;AAAYC,IAAAA,MAAM,EAANA;AAAZ,KAAuBC,IAAvB,CAAhB;;AAEA,MAAME,mBAAmB,GAAGN,oBAAoB,EAAhD;;AAH6C,mBAIvBC,SAAS,CAAC;AAC9BM,IAAAA,WAAW,EAAE,IADiB;AAE9BC,IAAAA,UAAU,EAAE;AAFkB,GAAD,CAJc;AAAA;AAAA,MAItCC,GAJsC;AAAA,MAIjCC,MAJiC;;AAS7C,SACE;AACE,IAAA,GAAG,EAAE,CAACJ,mBAAD,GAAuBG,GAAvB,GAA6BE,SADpC;AAEE,IAAA,SAAS,EAAC,wCAFZ;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,aAAa,YAAMV,MAAM,GAAGD,KAAV,GAAmB,GAAxB,MAFR;AAGLY,MAAAA,UAAU,EAAE;AAHP,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGJ,MAAM,IAAIJ,mBAAV,GAAgC,MAAC,KAAD,eAAWD,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC,GAA8D,IATjE,CADF;AAaD,CAtBD;AAAA,UAG8BL,oBAH9B,EAIwBC,SAJxB;AAAA","sourcesContent":["import { Image } from \"cloudinary-react\";\nimport React, { useState } from \"react\";\nimport useNativeLazyLoading from \"@charlietango/use-native-lazy-loading\";\nimport { useInView } from \"react-intersection-observer\";\n\n// This is a wrapper for cloudynary Image handler\n// Could be replace by any asset provider\n\nexport default ({ width, height, ...rest }) => {\n  let initialProps = { width, height, ...rest };\n\n  const supportsLazyLoading = useNativeLazyLoading();\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    rootMargin: \"200px 0px\",\n  });\n\n  return (\n    <div\n      ref={!supportsLazyLoading ? ref : undefined}\n      className=\"relative block overflow-hidden ease-in\"\n      style={{\n        position: \"relative\",\n        paddingBottom: `${(height / width) * 100}%`,\n        background: \"#2a4b7a\",\n      }}\n    >\n      {inView || supportsLazyLoading ? <Image {...initialProps} /> : null}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}